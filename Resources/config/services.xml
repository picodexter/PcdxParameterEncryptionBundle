<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services
        http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="pcdx_parameter_encryption.command.algorithm_list" class="Picodexter\ParameterEncryptionBundle\Command\AlgorithmListCommand">
            <argument type="service" id="pcdx_parameter_encryption.console.dispatcher.algorithm_list" />
            <tag name="console.command" />
        </service>

        <service id="pcdx_parameter_encryption.command.encrypt" class="Picodexter\ParameterEncryptionBundle\Command\EncryptCommand">
            <argument type="service" id="pcdx_parameter_encryption.console.dispatcher.encrypt" />
            <tag name="console.command" />
        </service>

        <service id="pcdx_parameter_encryption.configuration.algorithm_configuration_container" class="Picodexter\ParameterEncryptionBundle\Configuration\AlgorithmConfigurationContainer">
            <argument type="collection">
                <!-- automatically filled in at runtime -->
            </argument>
        </service>

        <service id="pcdx_parameter_encryption.console.dispatcher.algorithm_list" class="Picodexter\ParameterEncryptionBundle\Console\Dispatcher\AlgorithmListDispatcher">
            <argument type="service" id="pcdx_parameter_encryption.console.processor.algorithm_list" />
            <argument type="service" id="pcdx_parameter_encryption.console.helper.table_factory" />
        </service>

        <service id="pcdx_parameter_encryption.console.dispatcher.encrypt" class="Picodexter\ParameterEncryptionBundle\Console\Dispatcher\EncryptDispatcher">
            <argument type="service" id="pcdx_parameter_encryption.console.request.encrypt_request_factory" />
            <argument type="service" id="pcdx_parameter_encryption.console.processor.encrypt" />
            <argument type="service" id="pcdx_parameter_encryption.console.helper.hidden_input_question_asker_generator" />
        </service>

        <service id="pcdx_parameter_encryption.console.helper.algorithm_id_validator" class="Picodexter\ParameterEncryptionBundle\Console\Helper\AlgorithmIdValidator">
            <argument type="service" id="pcdx_parameter_encryption.configuration.algorithm_configuration_container" />
        </service>

        <service id="pcdx_parameter_encryption.console.helper.hidden_input_question_asker_generator" class="Picodexter\ParameterEncryptionBundle\Console\Helper\HiddenInputQuestionAskerGenerator">
            <argument type="service" id="pcdx_parameter_encryption.console.helper.question_asker_generator" />
            <argument type="service" id="pcdx_parameter_encryption.console.question.factory" />
        </service>

        <service id="pcdx_parameter_encryption.console.helper.question_asker_factory" class="Picodexter\ParameterEncryptionBundle\Console\Helper\QuestionAskerFactory">
        </service>

        <service id="pcdx_parameter_encryption.console.helper.question_asker_generator" class="Picodexter\ParameterEncryptionBundle\Console\Helper\QuestionAskerGenerator">
            <argument type="service" id="pcdx_parameter_encryption.console.helper.question_asker_factory" />
            <argument type="service" id="pcdx_parameter_encryption.console.helper.question_helper_factory" />
        </service>

        <service id="pcdx_parameter_encryption.console.helper.question_helper_factory" class="Picodexter\ParameterEncryptionBundle\Console\Helper\QuestionHelperFactory">
        </service>

        <service id="pcdx_parameter_encryption.console.helper.table_factory" class="Picodexter\ParameterEncryptionBundle\Console\Helper\TableFactory">
        </service>

        <service id="pcdx_parameter_encryption.console.processor.algorithm_list" class="Picodexter\ParameterEncryptionBundle\Console\Processor\AlgorithmListProcessor">
            <argument type="service" id="pcdx_parameter_encryption.configuration.algorithm_configuration_container" />
        </service>

        <service id="pcdx_parameter_encryption.console.processor.encrypt" class="Picodexter\ParameterEncryptionBundle\Console\Processor\EncryptProcessor">
            <argument type="service" id="pcdx_parameter_encryption.configuration.algorithm_configuration_container" />
        </service>

        <service id="pcdx_parameter_encryption.console.question.factory" class="Picodexter\ParameterEncryptionBundle\Console\Question\QuestionFactory">
        </service>

        <service id="pcdx_parameter_encryption.console.request.encrypt_request_factory" class="Picodexter\ParameterEncryptionBundle\Console\Request\EncryptRequestFactory">
        </service>

        <service id="pcdx_parameter_encryption.dependency_injection.service.bundle_configuration_validator" class="Picodexter\ParameterEncryptionBundle\DependencyInjection\Service\BundleConfigurationValidator">
        </service>

        <service id="pcdx_parameter_encryption.dependency_injection.service.definition_factory" class="Picodexter\ParameterEncryptionBundle\DependencyInjection\Service\DefinitionFactory">
        </service>

        <service id="pcdx_parameter_encryption.dependency_injection.service.definition_initialization_manager" class="Picodexter\ParameterEncryptionBundle\DependencyInjection\Service\ServiceDefinitionInitializationManager">
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.initializer.algorithm" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.initializer.replacement_pattern" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.initializer.replacement_source_decrypter" />
        </service>

        <service id="pcdx_parameter_encryption.dependency_injection.service.initializer.algorithm" class="Picodexter\ParameterEncryptionBundle\DependencyInjection\Service\Initializer\AlgorithmInitializer">
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.initializer.handler.algorithm_injection" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.initializer.handler.algorithm_registration" />
        </service>

        <service id="pcdx_parameter_encryption.dependency_injection.service.initializer.handler.algorithm_injection" class="Picodexter\ParameterEncryptionBundle\DependencyInjection\Service\Initializer\Handler\AlgorithmInjectionHandler">
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.bundle_configuration_validator" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.reference_factory" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.name_generator" />
        </service>

        <service id="pcdx_parameter_encryption.dependency_injection.service.initializer.handler.algorithm_registration" class="Picodexter\ParameterEncryptionBundle\DependencyInjection\Service\Initializer\Handler\AlgorithmRegistrationHandler">
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.bundle_configuration_validator" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.definition_factory" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.reference_factory" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.name_generator" />
        </service>

        <service id="pcdx_parameter_encryption.dependency_injection.service.initializer.handler.replacement_pattern_injection" class="Picodexter\ParameterEncryptionBundle\DependencyInjection\Service\Initializer\Handler\ReplacementPatternInjectionHandler">
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.bundle_configuration_validator" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.reference_factory" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.name_generator" />
        </service>

        <service id="pcdx_parameter_encryption.dependency_injection.service.initializer.handler.replacement_pattern_registration" class="Picodexter\ParameterEncryptionBundle\DependencyInjection\Service\Initializer\Handler\ReplacementPatternRegistrationHandler">
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.bundle_configuration_validator" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.definition_factory" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.name_generator" />
        </service>

        <service id="pcdx_parameter_encryption.dependency_injection.service.initializer.handler.replacement_source_decrypter_injection" class="Picodexter\ParameterEncryptionBundle\DependencyInjection\Service\Initializer\Handler\ReplacementSourceDecrypterInjectionHandler">
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.bundle_configuration_validator" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.reference_factory" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.name_generator" />
        </service>

        <service id="pcdx_parameter_encryption.dependency_injection.service.initializer.handler.replacement_source_decrypter_registration" class="Picodexter\ParameterEncryptionBundle\DependencyInjection\Service\Initializer\Handler\ReplacementSourceDecrypterRegistrationHandler">
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.bundle_configuration_validator" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.definition_factory" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.reference_factory" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.name_generator" />
        </service>

        <service id="pcdx_parameter_encryption.dependency_injection.service.initializer.replacement_pattern" class="Picodexter\ParameterEncryptionBundle\DependencyInjection\Service\Initializer\ReplacementPatternInitializer">
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.initializer.handler.replacement_pattern_injection" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.initializer.handler.replacement_pattern_registration" />
        </service>

        <service id="pcdx_parameter_encryption.dependency_injection.service.initializer.replacement_source_decrypter" class="Picodexter\ParameterEncryptionBundle\DependencyInjection\Service\Initializer\ReplacementSourceDecrypterInitializer">
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.initializer.handler.replacement_source_decrypter_injection" />
            <argument type="service" id="pcdx_parameter_encryption.dependency_injection.service.initializer.handler.replacement_source_decrypter_registration" />
        </service>

        <service id="pcdx_parameter_encryption.dependency_injection.service.name_generator" class="Picodexter\ParameterEncryptionBundle\DependencyInjection\Service\ServiceNameGenerator">
        </service>

        <service id="pcdx_parameter_encryption.dependency_injection.service.reference_factory" class="Picodexter\ParameterEncryptionBundle\DependencyInjection\Service\ReferenceFactory">
        </service>

        <service id="pcdx_parameter_encryption.encryption.caesar_cipher" class="Picodexter\ParameterEncryptionBundle\Encryption\CaesarCipher">
        </service>

        <service id="pcdx_parameter_encryption.encryption.decrypter.caesar.rot13" class="Picodexter\ParameterEncryptionBundle\Encryption\Decrypter\CaesarDecrypter">
            <argument type="service" id="pcdx_parameter_encryption.encryption.caesar_cipher" />
            <argument>13</argument>
        </service>

        <service id="pcdx_parameter_encryption.encryption.encrypter.caesar.rot13" class="Picodexter\ParameterEncryptionBundle\Encryption\Encrypter\CaesarEncrypter">
            <argument type="service" id="pcdx_parameter_encryption.encryption.caesar_cipher" />
            <argument>13</argument>
        </service>

        <service id="pcdx_parameter_encryption.replacement.parameter_replacement_fetcher" class="Picodexter\ParameterEncryptionBundle\Replacement\ParameterReplacementFetcher">
            <argument type="collection">
                <!-- automatically filled in at runtime -->
            </argument>
        </service>

        <service id="pcdx_parameter_encryption.replacement.parameter_replacer" class="Picodexter\ParameterEncryptionBundle\Replacement\ParameterReplacer">
            <argument type="service" id="pcdx_parameter_encryption.replacement.parameter_replacement_fetcher" />
        </service>

        <service id="pcdx_parameter_encryption.replacement.pattern.registry" class="Picodexter\ParameterEncryptionBundle\Replacement\Pattern\Registry\ReplacementPatternRegistry">
            <argument type="collection">
                <!-- automatically filled in at runtime -->
            </argument>
        </service>

        <service id="pcdx_parameter_encryption.replacement.pattern.type_registry" class="Picodexter\ParameterEncryptionBundle\Replacement\Pattern\Registry\ReplacementPatternTypeRegistry">
            <argument type="collection">
                <argument key="value_prefix">Picodexter\ParameterEncryptionBundle\Replacement\Pattern\ValuePrefixReplacementPattern</argument>
            </argument>
        </service>
    </services>
</container>
